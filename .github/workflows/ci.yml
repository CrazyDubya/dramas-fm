name: CI

on:
  push:
    branches: [ main, feature/**, release/** ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Lint
        run: npm run lint --if-present

      - name: Build
        run: npm run build

      - name: D1 smoke test (optional)
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CF_D1_DB_ID: ${{ secrets.CF_D1_DB_ID }}
          CF_D1_DB_NAME: ${{ vars.CF_D1_DB_NAME || 'radio-archive-catalog' }}
        run: |
          set -euo pipefail
          if [ -z "${CF_API_TOKEN:-}" ] || [ -z "${CF_ACCOUNT_ID:-}" ]; then
            echo "Skipping D1 smoke test (secrets not set)."; exit 0; fi
          if [ -z "${CF_D1_DB_ID:-}" ]; then
            echo "Resolving D1 DB id by name..."
            DB_JSON=$(curl -sS -H "Authorization: Bearer ${CF_API_TOKEN}" -H "Content-Type: application/json" "https://api.cloudflare.com/client/v4/accounts/${CF_ACCOUNT_ID}/d1/database?per_page=100")
            CF_D1_DB_ID=$(echo "$DB_JSON" | node -e "let s='';process.stdin.on('data',d=>s+=d);process.stdin.on('end',()=>{const j=JSON.parse(s);const n=process.env.CF_D1_DB_NAME||'radio-archive-catalog';const r=(j.result||[]).find(x=>x && x.name===n);console.log(r?r.uuid:'');});")
          fi
          if [ -z "${CF_D1_DB_ID:-}" ]; then echo "No D1 DB id found"; exit 1; fi
          echo "Querying D1 ${CF_D1_DB_ID}..."
          curl -sS -X POST -H "Authorization: Bearer ${CF_API_TOKEN}" -H "Content-Type: application/json" \
            "https://api.cloudflare.com/client/v4/accounts/${CF_ACCOUNT_ID}/d1/database/${CF_D1_DB_ID}/query" \
            --data '{"sql":"SELECT 1 as ok"}' | tee /dev/stderr | grep -q '"ok":1'
